package mocks

import (
	mock "github.com/stretchr/testify/mock"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// This file overwrites some mocked methods

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
	subResourceClient *SubResourceClient
}

// Status provides a mock function with given fields. Overrides normal mock functionality (can't be asserted)
func (_m *Client) Status() client.SubResourceWriter {
	return _m.SubResource("status")
}

// SubResource provides a mock function with given fields: subResource. Overrides normal mock functionality (can't be asserted)
func (_m *Client) SubResource(subResource string) client.SubResourceClient {
	return _m.subResourceClient
}

type mockConstructorTestingTNewClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t mockConstructorTestingTNewClient) *Client {
	subclient := NewSubResourceClient(t)
	mock := &Client{subResourceClient: subclient}
	mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
