name: Cass Operator Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    # Allow to rerun this for a tag to get updated UBI-images

jobs:
  release_cass_operator:
    name: Release Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: ${{ !env.ACT }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        if: ${{ !env.ACT }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set git parsed values
        id: vars
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short=8 ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "TARGET_VERSION=$(echo ${GITHUB_REF#refs/tags/} | awk '{print substr($0,2)}')" >> $GITHUB_ENV
      - name: Build system-logger
        id: docker_build_system-logger
        uses: docker/build-push-action@v3
        with:
          file: logger.Dockerfile
          build-args: |
            VERSION=${{ env.TARGET_VERSION }}
          context: .
          load: true
          tags: k8ssandra/system-logger:${{ steps.vars.outputs.tag_name}}, ghcr.io/k8ssandra/system-logger:${{ steps.vars.outputs.tag_name}}
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build cass-operator
        id: docker_build_cass-operator
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          build-args: |
            VERSION=${{ env.TARGET_VERSION }}
          context: .
          load: true
          tags: k8ssandra/cass-operator:${{ steps.vars.outputs.tag_name}}, ghcr.io/k8ssandra/cass-operator:${{ steps.vars.outputs.tag_name}}
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Push system-logger
        id: docker_push_system-logger
        uses: docker/build-push-action@v3
        with:
          file: logger.Dockerfile
          build-args: |
            VERSION=${{ env.TARGET_VERSION }}
          context: .
          push: ${{ !env.ACT }}
          tags: k8ssandra/system-logger:${{ steps.vars.outputs.tag_name}}, ghcr.io/k8ssandra/system-logger:${{ steps.vars.outputs.tag_name}}
          platforms: linux/amd64, linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Push cass-operator
        id: docker_push_cass-operator
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          build-args: |
            VERSION=${{ env.TARGET_VERSION }}
          context: .
          push: ${{ !env.ACT }}
          tags: k8ssandra/cass-operator:${{ steps.vars.outputs.tag_name}}, ghcr.io/k8ssandra/cass-operator:${{ steps.vars.outputs.tag_name}}
          platforms: linux/amd64, linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Tag and push images for Red Hat certification
        shell: bash
        if: ${{ !env.ACT }}
        run: |
          docker tag k8ssandra/cass-operator:${{ steps.vars.outputs.tag_name}} quay.io/redhat-isv-containers/5ebee0e40e3deaf258b160d1:${{ steps.vars.outputs.tag_name}}
          docker tag k8ssandra/system-logger:${{ steps.vars.outputs.tag_name}} quay.io/redhat-isv-containers/6138f998fb33d420b79f0af9:${{ steps.vars.outputs.tag_name}}

          docker login -u redhat-isv-containers+5ebee0e40e3deaf258b160d1-robot quay.io -p ${{ secrets.CASS_OPERATOR_CONNECT_SECRET }}
          docker push quay.io/redhat-isv-containers/5ebee0e40e3deaf258b160d1:${{ steps.vars.outputs.tag_name}}

          docker login -u redhat-isv-containers+6138f998fb33d420b79f0af9-robot quay.io -p ${{ secrets.SYSTEM_LOGGER_CONNECT_SECRET }}
          docker push quay.io/redhat-isv-containers/6138f998fb33d420b79f0af9:${{ steps.vars.outputs.tag_name}}
      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          oc: "4"
      - name: Install CLI tools from GitHub
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "github"
          github_pat: ${{ github.token }}
          preflight: "latest"
      - name: Run preflight checks and submit results
        shell: bash
        run: |
          docker login -u redhat-isv-containers+5ebee0e40e3deaf258b160d1-robot quay.io -p ${{ secrets.CASS_OPERATOR_CONNECT_SECRET }}
          preflight check container quay.io/redhat-isv-containers/5ebee0e40e3deaf258b160d1:${{ steps.vars.outputs.tag_name}} --certification-project-id=5ebee0e40e3deaf258b160d1 --pyxis-api-token=${{ secrets.PREFLIGHT_KEY }} --submit --docker-config=$HOME/.docker/config.json

          docker login -u redhat-isv-containers+6138f998fb33d420b79f0af9-robot quay.io -p ${{ secrets.SYSTEM_LOGGER_CONNECT_SECRET }}
          preflight check container quay.io/redhat-isv-containers/6138f998fb33d420b79f0af9:${{ steps.vars.outputs.tag_name}} --certification-project-id=6138f998fb33d420b79f0af9 --pyxis-api-token=${{ secrets.PREFLIGHT_KEY }} --submit --docker-config=$HOME/.docker/config.json
      - name: Create bundle
        shell: bash
        if: ${{ !env.ACT }} # Act does not have yq
        run: |
          make IMG=k8ssandra/cass-operator:${{ steps.vars.outputs.tag_name}} VERSION=${{ env.TARGET_VERSION }} bundle
      - name: Build and push cass-operator-bundle
        id: docker_build_cass-operator_bundle
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v3
        with:
          file: bundle.Dockerfile
          build-args: |
            VERSION=${{ env.TARGET_VERSION }}
          context: .
          push: ${{ !env.ACT }}
          tags: k8ssandra/cass-operator-bundle:${{ steps.vars.outputs.tag_name}}
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
